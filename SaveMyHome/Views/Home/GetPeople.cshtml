@model PagedList.IPagedList<SaveMyHome.ViewModels.UserVM>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = Recourses.HomeGetPeople.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("GetPeople", "Home", FormMethod.Get, new { @class = "form-inline" }))
{
    <div class="form-group">
        <label class="control-label" for="SearchString">@Recourses.HomeGetPeople.FindByName</label>
         @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class="form-control" })
        <button type="submit" class="btn btn-default">
            <span class="glyphicon glyphicon-search"></span>@Recourses.HomeGetPeople.FindButton
        </button> 
    </div>
}

<table class="table table-striped">
    <thead>
        <tr>
            <th>@Recourses.HomeGetPeople.FirstName</th>
            <th>@Html.ActionLink(Recourses.HomeGetPeople.LastName, "GetPeople", 
               new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })</th>
            <th>@Html.ActionLink(Recourses.HomeGetPeople.ApartmentNumber, "GetPeople", 
               new { sortOrder = ViewBag.ApartSortParm, currentFilter = ViewBag.CurrentFilter })</th>
            <th>@Recourses.HomeGetPeople.PhoneNumber</th>
            <th>@Recourses.HomeGetPeople.SecondPhoneNumber</th>
            <th>Email</th>
            <th></th>
        </tr>
    </thead>
    <tbody class="well">
            @foreach (var p in Model)
            {
                <tr>
                    <td>@Html.ActionLink(p.FirstName, "Details", new { id = p.Id })</td>
                    <td>@Html.DisplayFor(model => p.LastName)</td>
                    <td>@Html.DisplayFor(model => p.ApartmentNumber)</td>
                    <td>@Html.DisplayFor(model => p.PhoneNumber)</td>
                    <td>@Html.DisplayFor(model => p.SecondPhoneNumber)</td>
                    <td>@Html.DisplayFor(model => p.Email)</td>
                </tr>
            }
    </tbody>
</table>
@Recourses.HomeGetPeople.Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) @Recourses.HomeGetPeople.From @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("GetPeople",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))